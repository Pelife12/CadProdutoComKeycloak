server.port=8081

spring.datasource.url=jdbc:sqlite:produtos.db
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.security.oauth2.client.registration.keycloak.client-id=frontend-produtos
spring.security.oauth2.client.registration.keycloak.client-secret=qhF1HX53saCi72pvkXO9ykuA1shZJ5k2
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/meu-app-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
spring.security.security.oauth2.resourceserver.jwt.issuer-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}